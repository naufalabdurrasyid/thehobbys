{"ast":null,"code":"var _jsxFileName = \"/home/muhammad/Documents/react-rc/src/components/loginpage/index.jsx\";\nimport React, { Component } from 'react';\nimport { FormGroup, Label, Col, Input, Button, Form } from 'reactstrap';\nimport AppHeader from '../common/AppHeader';\nimport store from 'store';\nimport { Redirect } from 'react-router-dom';\nimport isLoggedIn from '../helpers/is_logged_in';\nimport axios from 'axios';\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChecked = () => {\n      this.setState({\n        check: !this.state.check,\n        hidden: !this.state.hidden\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      check: false,\n      hidden: true\n    };\n    axios.defaults.baseUrl = 'https://historic-acadia-33199.herokuapp.com';\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChecked = this.handleChecked.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    axios.post(\"/api/user/login\", {\n      username: this.state.username,\n      password: this.state.password\n    }).then(response => {\n      if (response.status(201)) {\n        localStorage.setItem('JWT_TOKEN', response.data.token);\n        store.set('loggedIn', true);\n        alert('Anda berhasil masuk. Selamat Datang di Monggovestplus');\n        const token = localStorage.getItem('JWT_TOKEN');\n        const tokenParts = token.split('.');\n        const encodedPayload = tokenParts[1];\n        const rawPayload = atob(encodedPayload);\n        const user = JSON.parse(rawPayload);\n        localStorage.setItem('USER_ID', user.userId);\n        console.log('userId yang login', token);\n        this.props.toggle();\n        this.props.checkAuth();\n      }\n    }).catch(function (error) {\n      console.log(\"the error\", error);\n\n      if (error.response.data.status === 401) {\n        alert(\"Akun Anda belum teraktivasi, silahkan cek e-mail yang telah didaftarkan sebelumnya\");\n      } else {\n        alert(\"telah terjadi error, mohon hubungi tim kami untuk mendapat bantuan\", error.response.status);\n      }\n    });\n    this.setState({\n      username: \"\",\n      password: \"\"\n    });\n    store.set('loggedIn', true);\n  }\n\n  handleChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    let data = {};\n    data[name] = value;\n    this.setState(data);\n  }\n\n  render() {\n    if (isLoggedIn()) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"LOGIN\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Form, {\n      align: \"stretch\",\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Email:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      placeholder: \"Masukkan Email Anda\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Password: \"), React.createElement(Input, {\n      type: this.state.hidden ? \"password\" : \"text\",\n      required: \"required\",\n      name: \"password\",\n      value: this.state.password,\n      placeholder: \"Kata Sandi Anda\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Label, {\n      check: true,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"checkbox\",\n      checked: this.state.check,\n      onChange: this.handleChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), \"lihat kata sandi\"))), React.createElement(\"div\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.onSubmit,\n      color: \"submit\",\n      className: \"btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"MASUK\"), \" \"))));\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/muhammad/Documents/react-rc/src/components/loginpage/index.jsx"],"names":["React","Component","FormGroup","Label","Col","Input","Button","Form","AppHeader","store","Redirect","isLoggedIn","axios","LoginPage","constructor","props","handleChecked","setState","check","state","hidden","username","password","defaults","baseUrl","handleChange","bind","onSubmit","e","preventDefault","post","then","response","status","localStorage","setItem","data","token","set","alert","getItem","tokenParts","split","encodedPayload","rawPayload","atob","user","JSON","parse","userId","console","log","toggle","checkAuth","catch","error","name","target","value","render","submit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FormGroup, Label, Col, Input, Button, Form } from 'reactstrap';\nimport AppHeader from '../common/AppHeader';\nimport store from 'store';\nimport { Redirect } from 'react-router-dom';\nimport isLoggedIn from '../helpers/is_logged_in';\nimport axios from 'axios'\n\n\nclass LoginPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            check: false,\n            hidden: true\n        };\n        axios.defaults.baseUrl = 'https://historic-acadia-33199.herokuapp.com'\n\n        this.handleChange = this.handleChange.bind(this);\n\n        this.handleChecked = this.handleChecked.bind(this);\n\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onSubmit(e) {\n\n        e.preventDefault();\n        axios\n            .post(\"/api/user/login\", {\n                username: this.state.username,\n                password: this.state.password\n            })\n            .then((response) => {\n\n                if (response.status(201)) {\n                    localStorage.setItem('JWT_TOKEN', response.data.token)\n                    store.set('loggedIn', true);\n                    alert('Anda berhasil masuk. Selamat Datang di Monggovestplus');\n                    const token = localStorage.getItem('JWT_TOKEN')\n                    const tokenParts = token.split('.');\n                    const encodedPayload = tokenParts[1];\n                    const rawPayload = atob(encodedPayload);\n                    const user = JSON.parse(rawPayload);\n                    localStorage.setItem('USER_ID', user.userId)\n                    console.log('userId yang login', token)\n                    this.props.toggle()\n                    this.props.checkAuth()\n                }\n            })\n            .catch(function (error) {\n                console.log(\"the error\", error);\n                if (error.response.data.status === 401) {\n                    alert(\"Akun Anda belum teraktivasi, silahkan cek e-mail yang telah didaftarkan sebelumnya\");\n                } else {\n                    alert(\"telah terjadi error, mohon hubungi tim kami untuk mendapat bantuan\", error.response.status);\n                }\n            });\n        this.setState({\n            username: \"\",\n            password: \"\"\n        })\n        store.set('loggedIn', true);\n\n    }\n\n    handleChange(e) {\n        let name = e.target.name;\n        let value = e.target.value;\n        let data = {};\n        data[name] = value;\n        this.setState(data);\n    }\n\n    handleChecked = () => {\n        this.setState({\n            check: !this.state.check,\n            hidden: !this.state.hidden\n        });\n    }\n\n    render() {\n\n\n        if (isLoggedIn()) {\n            return <Redirect to=\"/\" />;\n        }\n        return (\n            <div>\n                <AppHeader />\n                <h1>LOGIN</h1>\n                <div>\n                    <Form align=\"stretch\" onSubmit={this.submit}>\n                        <FormGroup>\n                            Email:<br />\n                            <Input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} placeholder=\"Masukkan Email Anda\" />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Password: </Label>\n                            <Input type={this.state.hidden ? \"password\" : \"text\"} required=\"required\" name=\"password\" value={this.state.password} placeholder=\"Kata Sandi Anda\" onChange={this.handleChange}\n                            />\n                            <Label check sm={12}>\n                                <Col sm={12}>\n                                    <Input type=\"checkbox\" checked={this.state.check} onChange={this.handleChecked} />lihat kata sandi\n                </Col>\n                            </Label>\n                        </FormGroup>\n\n                        <div align=\"center\">\n                            <Button  onClick={this.onSubmit} color=\"submit\" className=\"btn-primary\">MASUK</Button>{\" \"}\n                        </div>\n                    </Form>\n                </div>\n\n            </div>\n        );\n    }\n}\n\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}