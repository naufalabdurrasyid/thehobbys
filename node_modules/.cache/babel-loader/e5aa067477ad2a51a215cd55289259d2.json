{"ast":null,"code":"var _jsxFileName = \"/home/muhammad/Documents/react-rc/src/components/loginpage/register.jsx\";\nimport { React, createRef } from 'react';\nimport store from 'store';\nimport isLoggedIn from '../helpers/is_logged_in';\nimport { Label, FormGroup, Input, Container, Button, Form, Col } from 'reactstrap';\nimport AppHeader from '../common/AppHeader'; //import Dropzone from 'react-dropzone'\n\nimport { Redirect } from 'react-router-dom';\nimport axios from \"axios\"; //const dropzoneRef = createRef\n\naxios.defaults.baseURL = 'https://historic-acadia-33199.herokuapp.com';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckedPeternak = () => {\n      this.setState({\n        check: !this.state.check,\n        hidden: !this.state.hidden\n      });\n    };\n\n    this.handleCheckedInvestor = () => {\n      this.setState({\n        checkI: !this.state.checkI,\n        hidden: !this.state.hidden\n      });\n    };\n\n    this.handleUploadImages = images => {\n      // uploads is an array that would hold all the post methods for each image to be uploaded, then we'd use axios.all()\n      const uploads = images.map(image => {\n        // our formdata\n        const formData = new FormData();\n        formData.append(\"file\", image);\n        formData.append(\"tags\", '{TAGS}'); // Add tags for the images - {Array}\n\n        formData.append(\"upload_preset\", \"{YOUR_PRESET}\"); // Replace the preset name with your own\n\n        formData.append(\"api_key\", \"{YOUR_API_KEY}\"); // Replace API key with your own Cloudinary API key\n\n        formData.append(\"timestamp\", Date.now() / 1000 | 0); // Replace cloudinary upload URL with yours\n\n        return axios.post(\"https://api.cloudinary.com/v1_1/{CLOUD_NAME}/image/upload\", formData, {\n          headers: {\n            \"X-Requested-With\": \"XMLHttpRequest\"\n          }\n        }).then(response => console.log(response.data));\n      }); // We would use axios `.all()` method to perform concurrent image upload to cloudinary.\n\n      axios.all(uploads).then(() => {\n        // ... do anything after successful upload. You can setState() or save the data\n        console.log('Images have all being uploaded');\n      });\n    };\n\n    this.state = {\n      user_foto: '',\n      password: '',\n      email: '',\n      username: '',\n      roles: '',\n      confirmPassword: '',\n      check: false,\n      checkI: false\n    };\n    this.changePassword = this.changePassword.bind(this);\n    this.changeUsername = this.changeUsername.bind(this);\n    this.changeEmail = this.changeEmail.bind(this);\n    this.changeRoles = this.changeRoles.bind(this);\n    this.changeConfirmPassword = this.changeConfirmPassword.bind(this);\n  }\n\n  changePassword(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  changeEmail(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  changeUsername(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  changeRoles(event) {\n    this.setState({\n      roles: event.target.value\n    });\n  }\n\n  changeConfirmPassword(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  signUp(event) {\n    event.preventDefault();\n\n    if (this.state.password === this.state.confirmPassword) {\n      axios.post(\"/api/user\", {\n        user_foto: this.state.user_foto,\n        email: this.state.email,\n        password: this.state.password,\n        username: this.state.username,\n        roles: this.state.roles\n      }).then(response => {\n        console.log(response, \"the response\");\n        localStorage.setItem('JWT_TOKEN', response.data.token);\n        store.set('loggedIn', true);\n        localStorage.setItem('USER_ID', response.data.id);\n        this.props.history.push('/');\n        alert('Anda berhasil masuk. Selamat Datang di Monggovest');\n      }).catch(function (error) {\n        console.log(\"the error\", error);\n        alert(\"error\", error);\n      });\n      this.setState({\n        email: \"\",\n        password: \"\"\n      });\n    } else {\n      alert('Pastikan password anda benar!');\n    }\n  }\n\n  render() {\n    console.log(isLoggedIn());\n\n    if (isLoggedIn()) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(AppHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Container, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          margin: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Sign Up\"), React.createElement(Form, {\n        style: {\n          width: '500px',\n          margin: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Username: \")), React.createElement(Col, {\n        sm: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"username\",\n        type: \"username\",\n        onChange: this.changeUsername,\n        placeholder: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Email: \")), React.createElement(Col, {\n        sm: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"email\",\n        type: \"email\",\n        onChange: this.changeEmail,\n        placeholder: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"roles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Roles: \")), React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        checked: this.state.check,\n        onChange: this.handleCheckedPeternak,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), \"Peternak\"), React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        checked: this.state.checkI,\n        onChange: this.handleCheckedInvestor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), \"Investor\")), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Password: \")), React.createElement(Col, {\n        sm: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"password\",\n        type: \"password\",\n        onChange: this.changePassword,\n        placeholder: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"ConfirmPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Confirm Password: \")), React.createElement(Col, {\n        sm: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"ConfirmPassword\",\n        type: \"ConfirmPassword\",\n        onChange: this.changeConfirmPassword,\n        placeholder: \"confirm password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"user_foto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Profile Photo\")), React.createElement(Col, {\n        sm: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"file\",\n        name: \"file\",\n        id: \"exampleFile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        onClick: this.SignUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Sign Up !!!\")))));\n    }\n  }\n\n}\n\n;\nexport default SignUp;","map":{"version":3,"sources":["/home/muhammad/Documents/react-rc/src/components/loginpage/register.jsx"],"names":["React","createRef","store","isLoggedIn","Label","FormGroup","Input","Container","Button","Form","Col","AppHeader","Redirect","axios","defaults","baseURL","SignUp","Component","constructor","props","handleCheckedPeternak","setState","check","state","hidden","handleCheckedInvestor","checkI","handleUploadImages","images","uploads","map","image","formData","FormData","append","Date","now","post","headers","then","response","console","log","data","all","user_foto","password","email","username","roles","confirmPassword","changePassword","bind","changeUsername","changeEmail","changeRoles","changeConfirmPassword","event","target","value","signUp","preventDefault","localStorage","setItem","token","set","id","history","push","alert","catch","error","render","textAlign","margin","width"],"mappings":"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","sourcesContent":["import {React, createRef} from 'react';\nimport store from 'store'\nimport isLoggedIn from '../helpers/is_logged_in'\nimport { Label, FormGroup, Input, Container, Button, Form,  Col } from 'reactstrap';\nimport AppHeader from '../common/AppHeader';\n//import Dropzone from 'react-dropzone'\n\nimport { Redirect } from 'react-router-dom'\nimport axios from \"axios\";\n//const dropzoneRef = createRef\naxios.defaults.baseURL = 'https://historic-acadia-33199.herokuapp.com'\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user_foto: '',\n            password: '',\n            email: '',\n            username: '',\n            roles: '',\n            confirmPassword: '',\n            check: false,\n            checkI: false\n\n\n        }\n        this.changePassword = this.changePassword.bind(this)\n        this.changeUsername = this.changeUsername.bind(this)\n        this.changeEmail = this.changeEmail.bind(this)\n        this.changeRoles = this.changeRoles.bind(this)\n        this.changeConfirmPassword = this.changeConfirmPassword.bind(this)\n\n\n\n    }\n\n    changePassword(event) {\n        this.setState({\n            password: event.target.value\n        })\n    }\n    changeEmail(event) {\n        this.setState({\n            email: event.target.value\n        })\n    }\n    changeUsername(event) {\n        this.setState({\n            username: event.target.value\n        })\n    }\n    changeRoles(event) {\n        this.setState({\n            roles: event.target.value\n        })\n    }\n    changeConfirmPassword(event) {\n        this.setState({\n            email: event.target.value\n        })\n    }\n    handleCheckedPeternak = () => {\n        this.setState({\n            check: !this.state.check,\n            hidden: !this.state.hidden\n        });\n    }\n    handleCheckedInvestor = () => {\n        this.setState({\n            checkI: !this.state.checkI,\n            hidden: !this.state.hidden\n        });\n    }\n    handleUploadImages = images => {\n        // uploads is an array that would hold all the post methods for each image to be uploaded, then we'd use axios.all()\n        const uploads = images.map(image => {\n          // our formdata\n          const formData = new FormData();\n          formData.append(\"file\", image);\n          formData.append(\"tags\", '{TAGS}'); // Add tags for the images - {Array}\n          formData.append(\"upload_preset\", \"{YOUR_PRESET}\"); // Replace the preset name with your own\n          formData.append(\"api_key\", \"{YOUR_API_KEY}\"); // Replace API key with your own Cloudinary API key\n          formData.append(\"timestamp\", (Date.now() / 1000) | 0);\n    \n          // Replace cloudinary upload URL with yours\n          return axios.post(\n            \"https://api.cloudinary.com/v1_1/{CLOUD_NAME}/image/upload\",\n            formData, \n            { headers: { \"X-Requested-With\": \"XMLHttpRequest\" }})\n            .then(response => console.log(response.data))\n        });\n    \n        // We would use axios `.all()` method to perform concurrent image upload to cloudinary.\n        axios.all(uploads).then(() => {\n          // ... do anything after successful upload. You can setState() or save the data\n          console.log('Images have all being uploaded')\n        });\n      }    \n\n    signUp(event) {\n        event.preventDefault();\n        if (this.state.password === this.state.confirmPassword) {\n            axios\n                .post(\"/api/user\", {\n                    user_foto: this.state.user_foto,\n                    email: this.state.email,\n                    password: this.state.password,\n                    username: this.state.username,\n                    roles: this.state.roles\n                })\n                .then((response) => {\n                    console.log(response, \"the response\");\n\n                    localStorage.setItem('JWT_TOKEN', response.data.token)\n                    store.set('loggedIn', true);\n                    localStorage.setItem('USER_ID', response.data.id)\n                    this.props.history.push('/');\n                    alert('Anda berhasil masuk. Selamat Datang di Monggovest');\n\n                })\n                .catch(function (error) {\n                    console.log(\"the error\", error);\n                    alert(\"error\", error);\n                });\n            this.setState({\n                email: \"\",\n                password: \"\"\n            })\n\n        } else {\n            alert('Pastikan password anda benar!')\n        }\n\n    }\n    render() {\n\n        console.log(isLoggedIn())\n        if (isLoggedIn()) {\n            return (\n                <Redirect to='/' />\n            )\n        } else {\n\n            return (\n                <div>\n                    <AppHeader />\n\n                    <div>\n                        <Container style={{ textAlign: 'center' }}>\n                            <h2 style={{ margin: '30px' }}>Sign Up</h2>\n                            <Form style={{ width: '500px', margin: 'auto' }}>\n                                \n                                <FormGroup row>\n                                    <Col sm='3' style={{ textAlign: 'left' }}><Label for='username'>Username: </Label></Col>\n                                    <Col sm='9'><Input name='username' type='username' onChange={this.changeUsername} placeholder=\"username\" /></Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Col sm='3' style={{ textAlign: 'left' }}><Label for='email'>Email: </Label></Col>\n                                    <Col sm='9'><Input name='email' type='email' onChange={this.changeEmail} placeholder=\"email\" /></Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Col sm='3' style={{ textAlign: 'left' }} ><Label for='roles'>Roles: </Label></Col>\n                                    <Col sm='4'><Input type=\"checkbox\" checked={this.state.check} onChange={this.handleCheckedPeternak} />Peternak</Col>\n                                    <Col sm='4'><Input type=\"checkbox\" checked={this.state.checkI} onChange={this.handleCheckedInvestor} />Investor</Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Col sm='3' style={{ textAlign: 'left' }} ><Label for='password'>Password: </Label></Col>\n                                    <Col sm='9'><Input name='password' type='password' onChange={this.changePassword} placeholder=\"password\" /></Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Col sm='3' style={{ textAlign: 'left' }} ><Label for='ConfirmPassword'>Confirm Password: </Label></Col>\n                                    <Col sm='9'><Input name='ConfirmPassword' type='ConfirmPassword' onChange={this.changeConfirmPassword} placeholder=\"confirm password\" /></Col>\n                                </FormGroup>\n                                \n                                <FormGroup row>\n                                <Col sm='3' style={{ textAlign: 'left' }}><Label for=\"user_foto\">Profile Photo</Label></Col>\n                                <Col sm='9'><Input type=\"file\" name=\"file\" id=\"exampleFile\" /></Col>\n                                </FormGroup>\n                                \n\n\n                                <Button onClick={this.SignUp}>Sign Up !!!</Button>\n                            </Form>\n\n                        </Container>\n                    </div>\n                </div>\n\n            );\n        }\n    }\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}