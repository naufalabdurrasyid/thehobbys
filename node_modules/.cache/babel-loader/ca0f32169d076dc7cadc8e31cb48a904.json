{"ast":null,"code":"var _jsxFileName = \"/home/muhammad/Documents/react-rc/src/components/loginpage/register.jsx\";\nimport React from 'react';\nimport store from 'store';\nimport isLoggedIn from '../helpers/is_logged_in';\nimport { Label, FormGroup, Input, Container, Button, Form, Col } from 'reactstrap';\nimport AppHeader from '../common/AppHeader';\nimport { useDropzone } from 'react-dropzone';\nimport { Redirect } from 'react-router-dom';\nimport axios from \"axios\";\naxios.defaults.baseURL = 'https://historic-acadia-33199.herokuapp.com';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckedPeternak = () => {\n      this.setState({\n        check: !this.state.check,\n        hidden: !this.state.hidden\n      });\n    };\n\n    this.handleCheckedInvestor = () => {\n      this.setState({\n        checkI: !this.state.checkI,\n        hidden: !this.state.hidden\n      });\n    };\n\n    this.handleUploadImages = images => {\n      // uploads is an array that would hold all the post methods for each image to be uploaded, then we'd use axios.all()\n      const uploads = images.map(image => {\n        // our formdata\n        const formData = new FormData();\n        formData.append(\"file\", image);\n        formData.append(\"tags\", 'user_foto'); // Add tags for the images - {Array}\n\n        formData.append(\"upload_preset\", \"efx7bxvu\"); // Replace the preset name with your own\n\n        formData.append(\"api_key\", \"149952854421636\"); // Replace API key with your own Cloudinary API key\n\n        formData.append(\"timestamp\", Date.now() / 1000 | 0); // Replace cloudinary upload URL with yours\n\n        return axios.post(\"https://api.cloudinary.com/v1_1/dcnhkq6qt/image/upload\", formData, {\n          headers: {\n            \"X-Requested-With\": \"XMLHttpRequest\"\n          }\n        }).then(response => console.log(response.data));\n      }); // We would use axios `.all()` method to perform concurrent image upload to cloudinary.\n\n      axios.all(uploads).then(() => {\n        // ... do anything after successful upload. You can setState() or save the data\n        console.log('Images have all being uploaded');\n      });\n    };\n\n    this.textInput = React.createRef();\n    this.state = {\n      user_foto: '',\n      password: '',\n      email: '',\n      username: '',\n      roles: '',\n      confirmPassword: '',\n      check: false,\n      checkI: false\n    };\n    this.changePassword = this.changePassword.bind(this);\n    this.changeUsername = this.changeUsername.bind(this);\n    this.changeEmail = this.changeEmail.bind(this);\n    this.changeRoles = this.changeRoles.bind(this);\n    this.changeConfirmPassword = this.changeConfirmPassword.bind(this);\n  }\n\n  componentDidMount() {\n    this.textInput.current.focusTextInput();\n  }\n\n  changePassword(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  changeEmail(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  changeUsername(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  changeRoles(event) {\n    this.setState({\n      roles: event.target.value\n    });\n  }\n\n  changeConfirmPassword(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  signUp(event) {\n    event.preventDefault();\n\n    if (this.state.password === this.state.confirmPassword) {\n      axios.post(\"/api/user\", {\n        user_foto: this.state.user_foto,\n        email: this.state.email,\n        password: this.state.password,\n        username: this.state.username,\n        roles: this.state.roles\n      }).then(response => {\n        console.log(response, \"the response\");\n        localStorage.setItem('JWT_TOKEN', response.data.token);\n        store.set('loggedIn', true);\n        localStorage.setItem('USER_ID', response.data.id);\n        this.props.history.push('/');\n        alert('Anda berhasil masuk. Selamat Datang di Monggovest');\n      }).catch(function (error) {\n        console.log(\"the error\", error);\n        alert(\"error\", error);\n      });\n      this.setState({\n        email: \"\",\n        password: \"\"\n      });\n    } else {\n      alert('Pastikan password anda benar!');\n    }\n  }\n\n  render() {\n    const _useDropzone = useDropzone(),\n          getRootProps = _useDropzone.getRootProps,\n          getInputProps = _useDropzone.getInputProps;\n\n    console.log(isLoggedIn());\n\n    if (isLoggedIn()) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      });\n    }\n\n    console.log('images, this.state.image.url');\n    let imageUpload;\n\n    if (this.state.image.url === undefined) {\n      imageUpload = React.createElement(FormGroup, {\n        row: true,\n        ref: this.textInput,\n        onDrop: this.handleUploadImages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        style: {\n          width: 100\n        },\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })), \"      \");\n    } else {\n      imageUpload = React.createElement(\"img\", {\n        style: {\n          width: 100\n        },\n        src: this.state.image.url,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        margin: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(Form, {\n      style: {\n        width: '500px',\n        margin: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, imageUpload, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"3\",\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Username: \")), React.createElement(Col, {\n      sm: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"username\",\n      type: \"username\",\n      onChange: this.changeUsername,\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"3\",\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Email: \")), React.createElement(Col, {\n      sm: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"email\",\n      type: \"email\",\n      onChange: this.changeEmail,\n      placeholder: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"3\",\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"roles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Roles: \")), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"checkbox\",\n      checked: this.state.check,\n      onChange: this.handleCheckedPeternak,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), \"Peternak\"), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"checkbox\",\n      checked: this.state.checkI,\n      onChange: this.handleCheckedInvestor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), \"Investor\")), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"3\",\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Password: \")), React.createElement(Col, {\n      sm: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"password\",\n      type: \"password\",\n      onChange: this.changePassword,\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"3\",\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"ConfirmPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Confirm Password: \")), React.createElement(Col, {\n      sm: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"ConfirmPassword\",\n      type: \"ConfirmPassword\",\n      onChange: this.changeConfirmPassword,\n      placeholder: \"confirm password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"3\",\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"user_foto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Profile Photo\")), React.createElement(Col, {\n      sm: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"file\",\n      name: \"file\",\n      id: \"exampleFile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      onClick: this.SignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Sign Up !!!\")))));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/home/muhammad/Documents/react-rc/src/components/loginpage/register.jsx"],"names":["React","store","isLoggedIn","Label","FormGroup","Input","Container","Button","Form","Col","AppHeader","useDropzone","Redirect","axios","defaults","baseURL","SignUp","Component","constructor","props","handleCheckedPeternak","setState","check","state","hidden","handleCheckedInvestor","checkI","handleUploadImages","images","uploads","map","image","formData","FormData","append","Date","now","post","headers","then","response","console","log","data","all","textInput","createRef","user_foto","password","email","username","roles","confirmPassword","changePassword","bind","changeUsername","changeEmail","changeRoles","changeConfirmPassword","componentDidMount","current","focusTextInput","event","target","value","signUp","preventDefault","localStorage","setItem","token","set","id","history","push","alert","catch","error","render","getRootProps","getInputProps","imageUpload","url","undefined","width","textAlign","margin"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,KAA3B,EAAkCC,SAAlC,EAA6CC,MAA7C,EAAqDC,IAArD,EAA2DC,GAA3D,QAAsE,YAAtE;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,6CAAzB;;AAEA,MAAMC,MAAN,SAAqBhB,KAAK,CAACiB,SAA3B,CAAqC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAoDnBC,qBApDmB,GAoDK,MAAM;AAC1B,WAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAE,CAAC,KAAKC,KAAL,CAAWD,KADT;AAEVE,QAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAFV,OAAd;AAIH,KAzDkB;;AAAA,SA0DnBC,qBA1DmB,GA0DK,MAAM;AAC1B,WAAKJ,QAAL,CAAc;AACVK,QAAAA,MAAM,EAAE,CAAC,KAAKH,KAAL,CAAWG,MADV;AAEVF,QAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAFV,OAAd;AAIH,KA/DkB;;AAAA,SAgEnBG,kBAhEmB,GAgEEC,MAAM,IAAI;AAC3B;AACA,YAAMC,OAAO,GAAGD,MAAM,CAACE,GAAP,CAAWC,KAAK,IAAI;AAChC;AACA,cAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,KAAxB;AACAC,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,WAAxB,EAJgC,CAIM;;AACtCF,QAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC,UAAjC,EALgC,CAKc;;AAC9CF,QAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,iBAA3B,EANgC,CAMe;;AAC/CF,QAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA8BC,IAAI,CAACC,GAAL,KAAa,IAAd,GAAsB,CAAnD,EAPgC,CAShC;;AACA,eAAOvB,KAAK,CAACwB,IAAN,CACH,wDADG,EAEHL,QAFG,EAGH;AAAEM,UAAAA,OAAO,EAAE;AAAE,gCAAoB;AAAtB;AAAX,SAHG,EAIFC,IAJE,CAIGC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,CAJf,CAAP;AAKH,OAfe,CAAhB,CAF2B,CAmB3B;;AACA9B,MAAAA,KAAK,CAAC+B,GAAN,CAAUf,OAAV,EAAmBU,IAAnB,CAAwB,MAAM;AAC1B;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,OAHD;AAIH,KAxFkB;;AAEf,SAAKG,SAAL,GAAiB7C,KAAK,CAAC8C,SAAN,EAAjB;AACA,SAAKvB,KAAL,GAAa;AACTwB,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,QAAQ,EAAE,EAJD;AAKTC,MAAAA,KAAK,EAAE,EALE;AAMTC,MAAAA,eAAe,EAAE,EANR;AAOT9B,MAAAA,KAAK,EAAE,KAPE;AAQTI,MAAAA,MAAM,EAAE;AARC,KAAb;AAYA,SAAK2B,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,WAAL,GAAmB,KAAKA,WAAL,CAAiBH,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKI,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BJ,IAA3B,CAAgC,IAAhC,CAA7B;AAIH;;AACDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKd,SAAL,CAAee,OAAf,CAAuBC,cAAvB;AACD;;AACHR,EAAAA,cAAc,CAACS,KAAD,EAAQ;AAClB,SAAKzC,QAAL,CAAc;AACV2B,MAAAA,QAAQ,EAAEc,KAAK,CAACC,MAAN,CAAaC;AADb,KAAd;AAGH;;AACDR,EAAAA,WAAW,CAACM,KAAD,EAAQ;AACf,SAAKzC,QAAL,CAAc;AACV4B,MAAAA,KAAK,EAAEa,KAAK,CAACC,MAAN,CAAaC;AADV,KAAd;AAGH;;AACDT,EAAAA,cAAc,CAACO,KAAD,EAAQ;AAClB,SAAKzC,QAAL,CAAc;AACV6B,MAAAA,QAAQ,EAAEY,KAAK,CAACC,MAAN,CAAaC;AADb,KAAd;AAGH;;AACDP,EAAAA,WAAW,CAACK,KAAD,EAAQ;AACf,SAAKzC,QAAL,CAAc;AACV8B,MAAAA,KAAK,EAAEW,KAAK,CAACC,MAAN,CAAaC;AADV,KAAd;AAGH;;AACDN,EAAAA,qBAAqB,CAACI,KAAD,EAAQ;AACzB,SAAKzC,QAAL,CAAc;AACV4B,MAAAA,KAAK,EAAEa,KAAK,CAACC,MAAN,CAAaC;AADV,KAAd;AAGH;;AAuCDC,EAAAA,MAAM,CAACH,KAAD,EAAQ;AACVA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAI,KAAK3C,KAAL,CAAWyB,QAAX,KAAwB,KAAKzB,KAAL,CAAW6B,eAAvC,EAAwD;AACpDvC,MAAAA,KAAK,CACAwB,IADL,CACU,WADV,EACuB;AACfU,QAAAA,SAAS,EAAE,KAAKxB,KAAL,CAAWwB,SADP;AAEfE,QAAAA,KAAK,EAAE,KAAK1B,KAAL,CAAW0B,KAFH;AAGfD,QAAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAWyB,QAHN;AAIfE,QAAAA,QAAQ,EAAE,KAAK3B,KAAL,CAAW2B,QAJN;AAKfC,QAAAA,KAAK,EAAE,KAAK5B,KAAL,CAAW4B;AALH,OADvB,EAQKZ,IARL,CAQWC,QAAD,IAAc;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAsB,cAAtB;AAEA2B,QAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkC5B,QAAQ,CAACG,IAAT,CAAc0B,KAAhD;AACApE,QAAAA,KAAK,CAACqE,GAAN,CAAU,UAAV,EAAsB,IAAtB;AACAH,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgC5B,QAAQ,CAACG,IAAT,CAAc4B,EAA9C;AACA,aAAKpD,KAAL,CAAWqD,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACAC,QAAAA,KAAK,CAAC,mDAAD,CAAL;AAEH,OAjBL,EAkBKC,KAlBL,CAkBW,UAAUC,KAAV,EAAiB;AACpBnC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBkC,KAAzB;AACAF,QAAAA,KAAK,CAAC,OAAD,EAAUE,KAAV,CAAL;AACH,OArBL;AAsBA,WAAKvD,QAAL,CAAc;AACV4B,QAAAA,KAAK,EAAE,EADG;AAEVD,QAAAA,QAAQ,EAAE;AAFA,OAAd;AAKH,KA5BD,MA4BO;AACH0B,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACH;AAEJ;;AAEDG,EAAAA,MAAM,GAAG;AAAA,yBACiClE,WAAW,EAD5C;AAAA,UACEmE,YADF,gBACEA,YADF;AAAA,UACgBC,aADhB,gBACgBA,aADhB;;AAGLtC,IAAAA,OAAO,CAACC,GAAR,CAAYxC,UAAU,EAAtB;;AACA,QAAIA,UAAU,EAAd,EAAkB;AACd,aACI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;AACDuC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,QAAIsC,WAAJ;;AACA,QAAI,KAAKzD,KAAL,CAAWQ,KAAX,CAAiBkD,GAAjB,KAAyBC,SAA7B,EAAwC;AACpCF,MAAAA,WAAW,GACX,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAe,QAAA,GAAG,EAAE,KAAKnC,SAAzB;AACQ,QAAA,MAAM,EAAE,KAAKlB,kBADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGQ,6CAASmD,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACI,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAEI;AAAK,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAA4B,QAAA,GAAG,EAAC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAHR,WADA;AAQH,KATD,MAUK;AACDH,MAAAA,WAAW,GAAG;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAA4B,QAAA,GAAG,EAAG,KAAK5D,KAAL,CAAWQ,KAAX,CAAiBkD,GAAnD;AAAwD,QAAA,GAAG,EAAC,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE,OAAT;AAAkBE,QAAAA,MAAM,EAAE;AAA1B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACvBL,WADuB,EAEI,oBAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,KAAK,EAAE;AAAEI,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA1C,CADJ,EAEI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,QAAQ,EAAE,KAAK7B,cAAtD;AAAsE,MAAA,WAAW,EAAC,UAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,CAFJ,CAFJ,EAMI,oBAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,KAAK,EAAE;AAAE6B,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA1C,CADJ,EAEI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,OAAzB;AAAiC,MAAA,QAAQ,EAAE,KAAK5B,WAAhD;AAA6D,MAAA,WAAW,EAAC,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,CAFJ,CANJ,EAUI,oBAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,KAAK,EAAE;AAAE4B,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3C,CADJ,EAEI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAE,KAAK7D,KAAL,CAAWD,KAA3C;AAAkD,MAAA,QAAQ,EAAE,KAAKF,qBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,aAFJ,EAGI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWG,MAA3C;AAAmD,MAAA,QAAQ,EAAE,KAAKD,qBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,aAHJ,CAVJ,EAeI,oBAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,KAAK,EAAE;AAAE2D,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA3C,CADJ,EAEI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,QAAQ,EAAE,KAAK/B,cAAtD;AAAsE,MAAA,WAAW,EAAC,UAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,CAFJ,CAfJ,EAmBI,oBAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,KAAK,EAAE;AAAE+B,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA3C,CADJ,EAEI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAA8B,MAAA,IAAI,EAAC,iBAAnC;AAAqD,MAAA,QAAQ,EAAE,KAAK1B,qBAApE;AAA2F,MAAA,WAAW,EAAC,kBAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,CAFJ,CAnBJ,EAwBI,oBAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,KAAK,EAAE;AAAE0B,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA1C,CADJ,EAEI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,EAAE,EAAC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,CAFJ,CAxBJ,EA+BI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKpE,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA/BJ,CAFJ,CADJ,CAHJ,CADJ;AA8CH;;AAtMgC;;AA2MrC,eAAeA,MAAf","sourcesContent":["import React  from 'react';\nimport store from 'store'\nimport isLoggedIn from '../helpers/is_logged_in'\nimport { Label, FormGroup, Input, Container, Button, Form, Col } from 'reactstrap';\nimport AppHeader from '../common/AppHeader';\nimport {useDropzone} from 'react-dropzone'\n\nimport { Redirect } from 'react-router-dom'\nimport axios from \"axios\";\n\n\naxios.defaults.baseURL = 'https://historic-acadia-33199.herokuapp.com'\n\nclass SignUp extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.textInput = React.createRef();\n        this.state = {\n            user_foto: '',\n            password: '',\n            email: '',\n            username: '',\n            roles: '',\n            confirmPassword: '',\n            check: false,\n            checkI: false\n\n\n        }\n        this.changePassword = this.changePassword.bind(this)\n        this.changeUsername = this.changeUsername.bind(this)\n        this.changeEmail = this.changeEmail.bind(this)\n        this.changeRoles = this.changeRoles.bind(this)\n        this.changeConfirmPassword = this.changeConfirmPassword.bind(this)\n\n\n\n    }\n    componentDidMount() {\n        this.textInput.current.focusTextInput();\n      }\n    changePassword(event) {\n        this.setState({\n            password: event.target.value\n        })\n    }\n    changeEmail(event) {\n        this.setState({\n            email: event.target.value\n        })\n    }\n    changeUsername(event) {\n        this.setState({\n            username: event.target.value\n        })\n    }\n    changeRoles(event) {\n        this.setState({\n            roles: event.target.value\n        })\n    }\n    changeConfirmPassword(event) {\n        this.setState({\n            email: event.target.value\n        })\n    }\n    handleCheckedPeternak = () => {\n        this.setState({\n            check: !this.state.check,\n            hidden: !this.state.hidden\n        });\n    }\n    handleCheckedInvestor = () => {\n        this.setState({\n            checkI: !this.state.checkI,\n            hidden: !this.state.hidden\n        });\n    }\n    handleUploadImages = images => {\n        // uploads is an array that would hold all the post methods for each image to be uploaded, then we'd use axios.all()\n        const uploads = images.map(image => {\n            // our formdata\n            const formData = new FormData();\n            formData.append(\"file\", image);\n            formData.append(\"tags\", 'user_foto'); // Add tags for the images - {Array}\n            formData.append(\"upload_preset\", \"efx7bxvu\"); // Replace the preset name with your own\n            formData.append(\"api_key\", \"149952854421636\"); // Replace API key with your own Cloudinary API key\n            formData.append(\"timestamp\", (Date.now() / 1000) | 0);\n\n            // Replace cloudinary upload URL with yours\n            return axios.post(\n                \"https://api.cloudinary.com/v1_1/dcnhkq6qt/image/upload\",\n                formData,\n                { headers: { \"X-Requested-With\": \"XMLHttpRequest\" } })\n                .then(response => console.log(response.data))\n        });\n\n        // We would use axios `.all()` method to perform concurrent image upload to cloudinary.\n        axios.all(uploads).then(() => {\n            // ... do anything after successful upload. You can setState() or save the data\n            console.log('Images have all being uploaded')\n        });\n    }\n\n    signUp(event) {\n        event.preventDefault();\n        if (this.state.password === this.state.confirmPassword) {\n            axios\n                .post(\"/api/user\", {\n                    user_foto: this.state.user_foto,\n                    email: this.state.email,\n                    password: this.state.password,\n                    username: this.state.username,\n                    roles: this.state.roles\n                })\n                .then((response) => {\n                    console.log(response, \"the response\");\n\n                    localStorage.setItem('JWT_TOKEN', response.data.token)\n                    store.set('loggedIn', true);\n                    localStorage.setItem('USER_ID', response.data.id)\n                    this.props.history.push('/');\n                    alert('Anda berhasil masuk. Selamat Datang di Monggovest');\n\n                })\n                .catch(function (error) {\n                    console.log(\"the error\", error);\n                    alert(\"error\", error);\n                });\n            this.setState({\n                email: \"\",\n                password: \"\"\n            })\n\n        } else {\n            alert('Pastikan password anda benar!')\n        }\n\n    }\n    \n    render() {\n        const {getRootProps, getInputProps} = useDropzone()\n\n        console.log(isLoggedIn())\n        if (isLoggedIn()) {\n            return (\n                <Redirect to='/' />\n            )\n        }\n        console.log('images, this.state.image.url')\n        let imageUpload \n        if (this.state.image.url === undefined) {\n            imageUpload =\n            <FormGroup row ref={this.textInput}\n                    onDrop={this.handleUploadImages}\n                >\n                    <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <img style={{ width: 100 }} alt=''></img>\n                    </div>      </FormGroup>\n        }\n        else {\n            imageUpload = <img style={{ width: 100 }} src= {this.state.image.url} alt=''></img>\n        }\n        return (\n            <div>\n                <AppHeader />\n\n                <div>\n                    <Container style={{ textAlign: 'center' }}>\n                        <h2 style={{ margin: '30px' }}>Sign Up</h2>\n                        <Form style={{ width: '500px', margin: 'auto' }}>\n{imageUpload}\n                            <FormGroup row>\n                                <Col sm='3' style={{ textAlign: 'left' }}><Label for='username'>Username: </Label></Col>\n                                <Col sm='9'><Input name='username' type='username' onChange={this.changeUsername} placeholder=\"username\" /></Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col sm='3' style={{ textAlign: 'left' }}><Label for='email'>Email: </Label></Col>\n                                <Col sm='9'><Input name='email' type='email' onChange={this.changeEmail} placeholder=\"email\" /></Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col sm='3' style={{ textAlign: 'left' }} ><Label for='roles'>Roles: </Label></Col>\n                                <Col sm='4'><Input type=\"checkbox\" checked={this.state.check} onChange={this.handleCheckedPeternak} />Peternak</Col>\n                                <Col sm='4'><Input type=\"checkbox\" checked={this.state.checkI} onChange={this.handleCheckedInvestor} />Investor</Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col sm='3' style={{ textAlign: 'left' }} ><Label for='password'>Password: </Label></Col>\n                                <Col sm='9'><Input name='password' type='password' onChange={this.changePassword} placeholder=\"password\" /></Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col sm='3' style={{ textAlign: 'left' }} ><Label for='ConfirmPassword'>Confirm Password: </Label></Col>\n                                <Col sm='9'><Input name='ConfirmPassword' type='ConfirmPassword' onChange={this.changeConfirmPassword} placeholder=\"confirm password\" /></Col>\n                            </FormGroup>\n\n                            <FormGroup row>\n                                <Col sm='3' style={{ textAlign: 'left' }}><Label for=\"user_foto\">Profile Photo</Label></Col>\n                                <Col sm='9'><Input type=\"file\" name=\"file\" id=\"exampleFile\" /></Col>\n                            </FormGroup>\n\n\n\n                            <Button onClick={this.SignUp}>Sign Up !!!</Button>\n                        </Form>\n\n                    </Container>\n                </div>\n            </div>\n\n        );\n    }\n    \n}\n\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}