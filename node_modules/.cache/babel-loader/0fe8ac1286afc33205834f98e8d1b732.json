{"ast":null,"code":"var _jsxFileName = \"/home/muhammad/Documents/react-rc/src/components/loginpage/index.jsx\";\nimport React, { Component } from 'react';\nimport { FormGroup, Label, Col, Input, Button, Form } from 'reactstrap';\nimport AppHeader from '../common/AppHeader';\nimport store from 'store';\nimport { Redirect } from 'react-router-dom';\nimport isLoggedIn from '../helpers/is_logged_in';\nimport axios from 'axios';\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChecked = () => {\n      this.setState({\n        check: !this.state.check,\n        hidden: !this.state.hidden\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      check: false,\n      hidden: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChecked = this.handleChecked.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    axios.post(\"https://historic-acadia-33199.herokuapp.com/api/user/login\", {\n      username,\n      password\n    }).then(response => {\n      if (_.isUndefined(response)) {\n        ReactGA.event({\n          category: 'Login',\n          action: 'Login Failed'\n        });\n        return dispatch(loginFailure('Error: No response'));\n      }\n\n      let token = response.data.token; //retreiving the token sent from the node.js\n\n      if (token) {\n        ReactGA.event({\n          category: 'Login',\n          action: 'Logged Successfully'\n        });\n        localStorage.setItem('token', token); //storing the token in our localstorage for subsequent requests\n\n        dispatch(loginSuccess({\n          token\n        }));\n        notification.success('Login successful');\n        Object.assign(request.defaults, {\n          headers: {\n            'x-access-token': localStorage.getItem('token') //Here we are retreiving the access token in our localstorage\n\n          }\n        });\n        appHistory.push('/'); //sending to the next route typically in all applications the Home Page\n      } else {\n        ReactGA.event({\n          category: 'Login',\n          action: 'Login Failed'\n        });\n\n        if (response.data.message) {\n          notification.error(response.data.message);\n        } else {\n          notification.success('Wrong username or password');\n        }\n\n        localStorage.removeItem('token');\n      }\n    }).catch(error => {\n      if (error) {\n        return dispatch(loginFailure(error));\n      }\n    });\n  }\n\n  handleChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    let data = {};\n    data[name] = value;\n    this.setState(data);\n  }\n\n  render() {\n    if (isLoggedIn()) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"LOGIN\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Form, {\n      align: \"stretch\",\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Email:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      placeholder: \"Masukkan Email Anda\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Password: \"), React.createElement(Input, {\n      type: this.state.hidden ? \"password\" : \"text\",\n      required: \"required\",\n      name: \"password\",\n      value: this.state.password,\n      placeholder: \"Kata Sandi Anda\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Label, {\n      check: true,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"checkbox\",\n      checked: this.state.check,\n      onChange: this.handleChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), \"lihat kata sandi\"))), React.createElement(\"div\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.onSubmit,\n      color: \"submit\",\n      className: \"btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"MASUK\"), \" \"))));\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/muhammad/Documents/react-rc/src/components/loginpage/index.jsx"],"names":["React","Component","FormGroup","Label","Col","Input","Button","Form","AppHeader","store","Redirect","isLoggedIn","axios","LoginPage","constructor","props","handleChecked","setState","check","state","hidden","username","password","handleChange","bind","onSubmit","event","preventDefault","post","then","response","_","isUndefined","ReactGA","category","action","dispatch","loginFailure","token","data","localStorage","setItem","loginSuccess","notification","success","Object","assign","request","defaults","headers","getItem","appHistory","push","message","error","removeItem","catch","e","name","target","value","render","submit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FormGroup, Label, Col, Input, Button, Form } from 'reactstrap';\nimport AppHeader from '../common/AppHeader';\nimport store from 'store';\nimport { Redirect } from 'react-router-dom';\nimport isLoggedIn from '../helpers/is_logged_in';\nimport axios from 'axios'\n\n\n\nclass LoginPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            check: false,\n            hidden: true\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n\n        this.handleChecked = this.handleChecked.bind(this);\n\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        axios.post(\"https://historic-acadia-33199.herokuapp.com/api/user/login\", {\n            username,\n            password\n            }).then(response => {\n            if (_.isUndefined(response)) {\n            ReactGA.event({\n            category: 'Login',\n            action: 'Login Failed'\n            })\n            return dispatch(loginFailure('Error: No response'))\n            }\n            let { token } = response.data//retreiving the token sent from the node.js\n            if (token) {\n            ReactGA.event({\n            category: 'Login',\n            action: 'Logged Successfully'\n            })\n            localStorage.setItem('token', token)//storing the token in our localstorage for subsequent requests\n            dispatch(loginSuccess({ token }))\n            notification.success('Login successful')\n            Object.assign(request.defaults, {\n            headers: { 'x-access-token': localStorage.getItem('token') }//Here we are retreiving the access token in our localstorage\n            })\n            appHistory.push('/')//sending to the next route typically in all applications the Home Page\n            } else {\n            ReactGA.event({\n            category: 'Login',\n            action: 'Login Failed'\n            })\n            if (response.data.message) {\n            notification.error(response.data.message)\n            } else {\n            notification.success('Wrong username or password')\n            }\n            localStorage.removeItem('token')\n            }\n            }).catch(error => {\n            if (error) {\n            return dispatch(loginFailure(error))\n            }\n            })\n            }\n            \n\n    \n    handleChange(e) {\n        let name = e.target.name;\n        let value = e.target.value;\n        let data = {};\n        data[name] = value;\n        this.setState(data);\n    }\n\n    handleChecked = () => {\n        this.setState({\n            check: !this.state.check,\n            hidden: !this.state.hidden\n        });\n    }\n\n    render() {\n\n\n        if (isLoggedIn()) {\n            return <Redirect to=\"/\" />;\n        }\n        return (\n            <div>\n                <AppHeader />\n                <h1>LOGIN</h1>\n                <div>\n                    <Form align=\"stretch\" onSubmit={this.submit}>\n                        <FormGroup>\n                            Email:<br />\n                            <Input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} placeholder=\"Masukkan Email Anda\" />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Password: </Label>\n                            <Input type={this.state.hidden ? \"password\" : \"text\"} required=\"required\" name=\"password\" value={this.state.password} placeholder=\"Kata Sandi Anda\" onChange={this.handleChange}\n                            />\n                            <Label check sm={12}>\n                                <Col sm={12}>\n                                    <Input type=\"checkbox\" checked={this.state.check} onChange={this.handleChecked} />lihat kata sandi\n                </Col>\n                            </Label>\n                        </FormGroup>\n\n                        <div align=\"center\">\n                            <Button  onClick={this.onSubmit} color=\"submit\" className=\"btn-primary\">MASUK</Button>{\" \"}\n                        </div>\n                    </Form>\n                </div>\n\n            </div>\n        );\n    }\n}\n\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}